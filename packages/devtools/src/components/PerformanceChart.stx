<script>
  export const chartData = {
    labels: ['Page Load', 'First Paint', 'Components Mounted', 'Directives Processed', 'Total Render'],
    datasets: [
      {
        label: 'Current (ms)',
        data: [42, 18, 75, 30, 165],
        color: '#4f46e5'
      },
      {
        label: 'Previous (ms)',
        data: [65, 25, 88, 35, 213],
        color: '#64748b'
      }
    ]
  };

  // Calculate the maximum value for scaling
  export const maxValue = Math.max(...chartData.datasets.flatMap(dataset => dataset.data)) * 1.2;

  // Format number with commas
  export function formatNumber(num) {
    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  }

  // Calculate bar width as percentage
  export function calculateWidth(value) {
    return (value / maxValue) * 100;
  }

  // Calculate improvement percentage
  export function calculateImprovement(current, previous) {
    const improvement = ((previous - current) / previous) * 100;
    return improvement.toFixed(1);
  }
</script>

<div class="performance-chart card p-6">
  <div class="flex justify-between items-center mb-6">
    <h3 class="text-xl font-bold">Performance Metrics</h3>
    <div class="flex items-center text-sm text-gray-500">
      <div class="flex items-center mr-4">
        <div class="w-3 h-3 bg-indigo-600 rounded-full mr-1"></div>
        <span>Current</span>
      </div>
      <div class="flex items-center">
        <div class="w-3 h-3 bg-gray-400 rounded-full mr-1"></div>
        <span>Previous</span>
      </div>
    </div>
  </div>

  <div class="space-y-6">
    @foreach (chartData.labels as label, index)
      <div class="metric-row">
        <div class="flex justify-between mb-1">
          <div class="font-medium">{{ label }}</div>
          <div class="flex items-center">
            <span class="font-mono mr-4">{{ chartData.datasets[0].data[index] }}ms</span>
            @if (chartData.datasets[1].data[index] > chartData.datasets[0].data[index])
              <span class="text-green-600 text-sm flex items-center">
                <span class="i-carbon-arrow-down mr-1"></span>
                {{ calculateImprovement(chartData.datasets[0].data[index], chartData.datasets[1].data[index]) }}%
              </span>
            @else
              <span class="text-red-600 text-sm flex items-center">
                <span class="i-carbon-arrow-up mr-1"></span>
                {{ calculateImprovement(chartData.datasets[1].data[index], chartData.datasets[0].data[index]) }}%
              </span>
            @endif
          </div>
        </div>

        <div class="bar-container h-8 bg-gray-100 rounded-md overflow-hidden relative">
          <!-- Previous bar -->
          <div
            class="bar-previous absolute top-0 left-0 h-full bg-gray-300"
            style="width: {{ calculateWidth(chartData.datasets[1].data[index]) }}%"
          ></div>

          <!-- Current bar -->
          <div
            class="bar-current absolute top-0 left-0 h-full bg-indigo-500"
            style="width: {{ calculateWidth(chartData.datasets[0].data[index]) }}%"
          ></div>
        </div>
      </div>
    @endforeach
  </div>

  <div class="mt-6 pt-4 border-t border-gray-200">
    <div class="grid grid-cols-2 gap-4">
      <div class="bg-green-50 p-4 rounded-lg">
        <div class="text-green-800 font-medium mb-1">Average Improvement</div>
        <div class="text-2xl font-bold text-green-600">
          {{ calculateImprovement(
              chartData.datasets[0].data.reduce((sum, val) => sum + val, 0),
              chartData.datasets[1].data.reduce((sum, val) => sum + val, 0)
            ) }}%
        </div>
      </div>

      <div class="bg-blue-50 p-4 rounded-lg">
        <div class="text-blue-800 font-medium mb-1">Total Render Time</div>
        <div class="text-2xl font-bold text-blue-600">
          {{ chartData.datasets[0].data[chartData.datasets[0].data.length - 1] }}ms
        </div>
      </div>
    </div>
  </div>
</div>